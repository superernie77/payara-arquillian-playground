<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>se77.examples.javaee</groupId>
	<artifactId>arquillian-examples</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>arquillian-example</name>
	<description>payara embedded examples tested with Arquillian</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<failOnMissingWebXml >false</failOnMissingWebXml>
		<arquillian-version>1.4.0.Final</arquillian-version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- JUnit dependency for the test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- Java EE 7 dependency for the EE API, strangely Eclipse wants this dependency although Spring Boot didn't include it-->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Embedded Payara application server to run the EE classes -->
		<dependency>
			<groupId>fish.payara.extras</groupId>
			<artifactId>payara-embedded-all</artifactId>
			<version>4.1.1.171</version>
			<scope>test</scope>
		</dependency>

		<!-- h2 DB to test JPA -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.194</version>
			<scope>test</scope>
		</dependency>

		<!-- The Arquilian JUnit annotations -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- The Arquilian DBUnit annotations -->
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-persistence-dbunit</artifactId>
			<version>1.0.0.Alpha7</version>
			<scope>test</scope>
		</dependency>

		<!-- The Arquilian adapter to connect to Payara -->
		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-glassfish-embedded-3.1</artifactId>
			<version>1.0.0.Final</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging implementation -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>arquillian-example</finalName>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.config.file>
							${project.build.testOutputDirectory}/logging.properties
						</java.util.logging.config.file>
						<derby.stream.error.file>
							${project.build.directory}/derby.log
						</derby.stream.error.file>
					</systemPropertyVariables>
				</configuration>

			</plugin>
		</plugins>
	</build>

</project>